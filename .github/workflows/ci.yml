name: CI

on:
  workflow_call:
    inputs:
      # node versions to use, json array like in matrix.node-version
      matrix-node-version:
        description: 'Node.js versions to use, json array like in matrix.node-version'
        type: string
      install-script:
        description: 'Install script to run'
        type: string
        default: npm ci
      check-script:
        description: 'Check script to run'
        type: string
        default: |
          npm run check
          npm run lint
      test-script:
        description: 'Test script to run'
        type: string
        default: |
          npm run build
          npm run test
      sonar-script:
        description: 'SonarQube script to run'
        type: string
        default: |
          npm run build
          npm run coverage
    secrets:
      sonar-token:
        description: 'SonarQube token'
        required: false

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  # echo-inputs:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: ${{ tojson(inputs) }}
  #       shell: cat {0}
  ci-check:
    uses: kt-workflows/npm-ci/.github/workflows/ci-check.yml@v1
    with:
      matrix-node-version: ${{ vars.MATRIX_NODE_VERSION }}
      install-script: ${{ inputs.install-script }}
      run-script: ${{ inputs.check-script }}

  ci-test:
    uses: kt-workflows/npm-ci/.github/workflows/ci-test.yml@v1
    with:
      matrix-node-version: ${{ vars.MATRIX_NODE_VERSION }}
      install-script: ${{ inputs.install-script }}
      run-script: ${{ inputs.test-script }}

  ci-sonar:
    if: ${{ secrets.sonar-token != '' }}
    uses: kt-workflows/npm-ci/.github/workflows/ci-sonar.yml@v1
    with:
      matrix-node-version: ${{ vars.MATRIX_NODE_VERSION }}
      install-script: ${{ inputs.install-script }}
      run-script: ${{ inputs.sonar-script }}
    secrets:
      sonar-token: ${{ secrets.sonar-token }}
