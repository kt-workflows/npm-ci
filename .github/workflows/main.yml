name: CI

on:
  workflow_call:
    inputs:
      # node versions to use, json array like in matrix.node-version
      matrix-node-version:
        description: 'Node.js versions to use, json array like in matrix.node-version'
        type: string
      install-script:
        description: 'Install script to run'
        type: string
        default: npm ci
      check-script:
        description: 'Check script to run'
        type: string
        default: |
          npm run check
          npm run lint
      test-script:
        description: 'Test script to run'
        type: string
        default: |
          npm run build
          npm run test
      sonar-script:
        description: 'SonarQube script to run'
        type: string
        default: |
          npm run build
          npm run coverage
      cache-additional-path:
        description: 'Additional paths to cache. This is a multi-line list of paths.'
        type: string
      cache-delete:
        description: 'Delete the cache if it exists to cache the new one.'
        type: boolean
        default: false
    secrets:
      SONAR_TOKEN:
        description: 'SonarQube token'
        required: false

permissions:
  contents: read # to fetch code (actions/checkout)
  actions: write # to cache (actions/cache)

jobs:
  # echo-inputs:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: ${{ tojson(inputs) }}
  #       shell: cat {0}
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: kt-actions/npm-run-script@v1
        with:
          matrix-node-version: ${{ inputs.matrix-node-version }}
          install-script: ${{ inputs.install-script }}
          run-script: ${{ inputs.check-script }}
          cache-additional-path: ${{ inputs.cache-additional-path }}
          cache-delete: ${{ inputs.cache-delete }}

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ${{ fromJson(inputs.matrix-node-version) }}
    steps:
      - uses: actions/checkout@v4

      - uses: kt-actions/npm-run-script@v1
        with:
          node-version: ${{ matrix.node-version }}
          install-script: ${{ inputs.install-script }}
          run-script: ${{ inputs.test-script }}
          cache-additional-path: ${{ inputs.cache-additional-path }}
          cache-delete: ${{ inputs.cache-delete }}

  sonar:
    runs-on: ubuntu-latest
    steps:
      # Check if sonar-token is set
      - id: sonar-token
        run: |
          if [[ -z "${{ secrets.SONAR_TOKEN }}" ]]; then
            echo "sonar-token is not set"
            echo "result=false" >> "$GITHUB_OUTPUT"
          else
            echo "sonar-token is set"
            echo "result=true" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/checkout@v4
        if: ${{ steps.sonar-token.outputs.result == 'true' }}

      - uses: kt-actions/npm-run-script@v1
        if: ${{ steps.sonar-token.outputs.result == 'true' }}
        with:
          matrix-node-version: ${{ inputs.matrix-node-version }}
          install-script: ${{ inputs.install-script }}
          run-script: ${{ inputs.sonar-script }}
          cache-additional-path: ${{ inputs.cache-additional-path }}
          cache-delete: ${{ inputs.cache-delete }}

      - uses: sonarsource/sonarqube-scan-action@v5
        if: ${{ steps.sonar-token.outputs.result == 'true' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
